// Generated by gencpp from file nmc_nlp_lite/nmcNLP.msg
// DO NOT EDIT!


#ifndef NMC_NLP_LITE_MESSAGE_NMCNLP_H
#define NMC_NLP_LITE_MESSAGE_NMCNLP_H

#include <ros/service_traits.h>


#include <nmc_nlp_lite/nmcNLPRequest.h>
#include <nmc_nlp_lite/nmcNLPResponse.h>


namespace nmc_nlp_lite
{

struct nmcNLP
{

typedef nmcNLPRequest Request;
typedef nmcNLPResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct nmcNLP
} // namespace nmc_nlp_lite


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::nmc_nlp_lite::nmcNLP > {
  static const char* value()
  {
    return "671f8e4998eaec79f1c47e339dfd527b";
  }

  static const char* value(const ::nmc_nlp_lite::nmcNLP&) { return value(); }
};

template<>
struct DataType< ::nmc_nlp_lite::nmcNLP > {
  static const char* value()
  {
    return "nmc_nlp_lite/nmcNLP";
  }

  static const char* value(const ::nmc_nlp_lite::nmcNLP&) { return value(); }
};


// service_traits::MD5Sum< ::nmc_nlp_lite::nmcNLPRequest> should match
// service_traits::MD5Sum< ::nmc_nlp_lite::nmcNLP >
template<>
struct MD5Sum< ::nmc_nlp_lite::nmcNLPRequest>
{
  static const char* value()
  {
    return MD5Sum< ::nmc_nlp_lite::nmcNLP >::value();
  }
  static const char* value(const ::nmc_nlp_lite::nmcNLPRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::nmc_nlp_lite::nmcNLPRequest> should match
// service_traits::DataType< ::nmc_nlp_lite::nmcNLP >
template<>
struct DataType< ::nmc_nlp_lite::nmcNLPRequest>
{
  static const char* value()
  {
    return DataType< ::nmc_nlp_lite::nmcNLP >::value();
  }
  static const char* value(const ::nmc_nlp_lite::nmcNLPRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::nmc_nlp_lite::nmcNLPResponse> should match
// service_traits::MD5Sum< ::nmc_nlp_lite::nmcNLP >
template<>
struct MD5Sum< ::nmc_nlp_lite::nmcNLPResponse>
{
  static const char* value()
  {
    return MD5Sum< ::nmc_nlp_lite::nmcNLP >::value();
  }
  static const char* value(const ::nmc_nlp_lite::nmcNLPResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::nmc_nlp_lite::nmcNLPResponse> should match
// service_traits::DataType< ::nmc_nlp_lite::nmcNLP >
template<>
struct DataType< ::nmc_nlp_lite::nmcNLPResponse>
{
  static const char* value()
  {
    return DataType< ::nmc_nlp_lite::nmcNLP >::value();
  }
  static const char* value(const ::nmc_nlp_lite::nmcNLPResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NMC_NLP_LITE_MESSAGE_NMCNLP_H
